name: Utilities
services:
  #  proxy-manager:
  #    image: "jc21/nginx-proxy-manager:latest"
  #    container_name: proxy-manager
  #    ports:
  #      - "80:80"
  #      - "81:81"
  #      - "443:443"
  #    volumes:
  #      - proxy_data:/data
  #      - proxy_letsencrypt:/etc/letsencrypt
  #    pull_policy: always
  #    restart: always

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy:/etc/caddy
      - caddy_data:/data
      - caddy_config:/config
    pull_policy: always
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      PUID: 1000
      PGID: 1000
    ports:
      - 3000:3000
    volumes:
      - /home/alex/dotfiles/files/docker/home-server/homepage:/app/config
      - /mnt/HDD/:/HDD
    pull_policy: always
    restart: always
    depends_on:
      - dockerproxy

  # Needed for homepage
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    pull_policy: always
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 8000:8000
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    pull_policy: always
    restart: always

  file-browser:
    image: filebrowser/filebrowser:latest
    container_name: file-browser
    environment:
      - PUID=1000
        PGID=1000
    ports:
      - 8112:80
    volumes:
      - filebrowser:/database
      - filebrowser:/config
      - /:/srv
    pull_policy: always
    restart: always

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    network_mode: host
    environment:
      TZ: "Europe/Bucharest"
      WEB_PORT: 7894
    volumes:
      - pihole:/etc/pihole
      - pihole_dnsmasq:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    pull_policy: always
    restart: always

volumes:
  portainer:
  proxy_data:
  proxy_letsencrypt:
  filebrowser:
  pihole:
  pihole_dnsmasq:
  caddy_data:
  caddy_config:

networks:
  default:
    name: home
    external: true
